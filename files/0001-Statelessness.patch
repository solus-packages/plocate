From 63e59adc9d54c32285071eda0a8f1d5b9ea0ce06 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Sun, 13 Mar 2022 14:53:55 +0000
Subject: [PATCH 1/1] Statelessness

---
 conf.cpp    | 28 ++++++++++++++++++----------
 meson.build |  2 +-
 2 files changed, 19 insertions(+), 11 deletions(-)

diff --git a/conf.cpp b/conf.cpp
index 1055fd7..e01a90f 100644
--- a/conf.cpp
+++ b/conf.cpp
@@ -219,10 +219,18 @@ parse_updatedb_conf(void)
 	unsigned old_error_message_count;
 	bool had_prune_bind_mounts, had_prunefs, had_prunenames, had_prunepaths;
 
-	uc_file = fopen(UPDATEDB_CONF, "r");
+	// Na√Øve statelessness
+	const char *conf_file = UPDATEDB_CONF;
+	if(access("/etc/updatedb.conf", F_OK ) == 0 ) {
+		conf_file = "/etc/updatedb.conf";
+	} else {
+		conf_file = "/usr/share/defaults/etc/updatedb.conf";
+	}
+	uc_file = fopen(conf_file, "r");
+
 	if (uc_file == NULL) {
 		if (errno != ENOENT)
-			error(EXIT_FAILURE, errno, _("can not open `%s'"), UPDATEDB_CONF);
+			error(EXIT_FAILURE, errno, _("can not open `%s'"), conf_file);
 		goto err;
 	}
 	flockfile(uc_file);
@@ -263,17 +271,17 @@ parse_updatedb_conf(void)
 			break;
 
 		case UCT_IDENTIFIER:
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("unknown variable `%s'"), uc_lex_buf.c_str());
 			goto skip_to_eol;
 
 		default:
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("variable name expected"));
 			goto skip_to_eol;
 		}
 		if (*had_var != false) {
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("variable `%s' was already defined"), uc_lex_buf.c_str());
 			goto skip_to_eol;
 		}
@@ -281,19 +289,19 @@ parse_updatedb_conf(void)
 		var_token = token;
 		token = uc_lex();
 		if (token != UCT_EQUAL) {
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("`=' expected after variable name"));
 			goto skip_to_eol;
 		}
 		token = uc_lex();
 		if (token != UCT_QUOTED) {
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("value in quotes expected after `='"));
 			goto skip_to_eol;
 		}
 		if (var_token == UCT_PRUNE_BIND_MOUNTS) {
 			if (parse_bool(&conf_prune_bind_mounts, uc_lex_buf.c_str()) != 0) {
-				error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+				error_at_line(0, 0, conf_file, uc_line,
 				              _("invalid value `%s' of PRUNE_BIND_MOUNTS"),
 				              uc_lex_buf.c_str());
 				goto skip_to_eol;
@@ -308,7 +316,7 @@ parse_updatedb_conf(void)
 			abort();
 		token = uc_lex();
 		if (token != UCT_EOL && token != UCT_EOF) {
-			error_at_line(0, 0, UPDATEDB_CONF, uc_line,
+			error_at_line(0, 0, conf_file, uc_line,
 			              _("unexpected data after variable value"));
 			goto skip_to_eol;
 		}
@@ -322,7 +330,7 @@ parse_updatedb_conf(void)
 	}
 eof:
 	if (ferror(uc_file))
-		error(EXIT_FAILURE, 0, _("I/O error reading `%s'"), UPDATEDB_CONF);
+		error(EXIT_FAILURE, 0, _("I/O error reading `%s'"), conf_file);
 	error_one_per_line = old_error_one_per_line;
 	funlockfile(uc_file);
 	fclose(uc_file);
diff --git a/meson.build b/meson.build
index 0cda239..dc6a74d 100644
--- a/meson.build
+++ b/meson.build
@@ -1,7 +1,7 @@
 project('plocate', 'cpp', default_options: ['buildtype=debugoptimized','cpp_std=c++17'], version: '1.1.16-pre')
 
 add_project_arguments('-DGROUPNAME="' + get_option('locategroup') + '"', language: 'cpp')
-add_project_arguments('-DUPDATEDB_CONF="/etc/updatedb.conf"', language: 'cpp')
+add_project_arguments('-DUPDATEDB_CONF="/usr/share/defaults/etc/updatedb.conf"', language: 'cpp')
 dbfile = join_paths(get_option('sharedstatedir'), get_option('dbpath'))
 add_project_arguments('-DDBFILE="' + dbfile + '"', language: 'cpp')
 add_project_arguments('-DPACKAGE_NAME="plocate"', language: 'cpp')
-- 
2.35.1

