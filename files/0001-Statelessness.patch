From 387d559684ac67339163abfe30fc345900ee3f83 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Wed, 30 Nov 2022 11:41:00 +0000
Subject: [PATCH 1/1] Statelessness

---
 conf.cpp    | 27 +++++++++++++++++----------
 meson.build |  2 +-
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/conf.cpp b/conf.cpp
index 60dd93f..65df9e9 100644
--- a/conf.cpp
+++ b/conf.cpp
@@ -210,10 +210,17 @@ parse_updatedb_conf(void)
 {
 	bool had_prune_bind_mounts, had_prunefs, had_prunenames, had_prunepaths;
 
-	uc_file = fopen(UPDATEDB_CONF, "r");
+	// Na√Øve statelessness
+	const char *conf_file = UPDATEDB_CONF;
+	if(access("/etc/updatedb.conf", F_OK ) == 0 ) {
+			conf_file = "/etc/updatedb.conf";
+	} else {
+			conf_file = "/usr/share/defaults/etc/updatedb.conf";
+	}
+	uc_file = fopen(conf_file, "r");
 	if (uc_file == NULL) {
 	        if (errno != ENOENT) {
-		        perror(UPDATEDB_CONF);
+		        perror(conf_file);
 			exit(EXIT_FAILURE);
 	        }
 		return;
@@ -254,17 +261,17 @@ parse_updatedb_conf(void)
 
 		case UCT_IDENTIFIER:
 			fprintf(stderr, "%s:%u: unknown variable: `%s'\n",
-				UPDATEDB_CONF, uc_line, uc_lex_buf.c_str());
+				conf_file, uc_line, uc_lex_buf.c_str());
 			exit(EXIT_FAILURE);
 
 		default:
 			fprintf(stderr, "%s:%u: variable name expected\n",
-				UPDATEDB_CONF, uc_line);
+				conf_file, uc_line);
 			exit(EXIT_FAILURE);
 		}
 		if (*had_var != false) {
 			fprintf(stderr, "%s:%u: variable `%s' was already defined\n",
-				UPDATEDB_CONF, uc_line, uc_lex_buf.c_str());
+				conf_file, uc_line, uc_lex_buf.c_str());
 			exit(EXIT_FAILURE);
 		}
 		*had_var = true;
@@ -272,19 +279,19 @@ parse_updatedb_conf(void)
 		token = uc_lex();
 		if (token != UCT_EQUAL) {
 			fprintf(stderr, "%s:%u: `=' expected after variable name\n",
-				UPDATEDB_CONF, uc_line);
+				conf_file, uc_line);
 			exit(EXIT_FAILURE);
 		}
 		token = uc_lex();
 		if (token != UCT_QUOTED) {
 			fprintf(stderr, "%s:%u: value in quotes expected after `='\n",
-				UPDATEDB_CONF, uc_line);
+				conf_file, uc_line);
 			exit(EXIT_FAILURE);
 		}
 		if (var_token == UCT_PRUNE_BIND_MOUNTS) {
 			if (parse_bool(&conf_prune_bind_mounts, uc_lex_buf.c_str()) != 0) {
 				fprintf(stderr, "%s:%u: invalid value `%s' of PRUNE_BIND_MOUNTS\n",
-					UPDATEDB_CONF, uc_line, uc_lex_buf.c_str());
+					conf_file, uc_line, uc_lex_buf.c_str());
 				exit(EXIT_FAILURE);
 			}
 		} else if (var_token == UCT_PRUNEFS)
@@ -298,7 +305,7 @@ parse_updatedb_conf(void)
 		token = uc_lex();
 		if (token != UCT_EOL && token != UCT_EOF) {
 			fprintf(stderr, "%s:%u: unexpected data after variable value\n",
-				UPDATEDB_CONF, uc_line);
+				conf_file, uc_line);
 			exit(EXIT_FAILURE);
 		}
 		/* Fall through */
@@ -310,7 +317,7 @@ parse_updatedb_conf(void)
 	}
 eof:
 	if (ferror(uc_file)) {
-		perror(UPDATEDB_CONF);
+		perror(conf_file);
 		exit(EXIT_FAILURE);
 	}
 	funlockfile(uc_file);
diff --git a/meson.build b/meson.build
index e2856a7..00d935b 100644
--- a/meson.build
+++ b/meson.build
@@ -1,7 +1,7 @@
 project('plocate', 'cpp', default_options: ['buildtype=debugoptimized','cpp_std=c++17'], version: '1.1.17')
 
 add_project_arguments('-DGROUPNAME="' + get_option('locategroup') + '"', language: 'cpp')
-add_project_arguments('-DUPDATEDB_CONF="/etc/updatedb.conf"', language: 'cpp')
+add_project_arguments('-DUPDATEDB_CONF="/usr/share/defaults/etc/updatedb.conf"', language: 'cpp')
 dbfile = join_paths(get_option('sharedstatedir'), get_option('dbpath'))
 add_project_arguments('-DDBFILE="' + dbfile + '"', language: 'cpp')
 add_project_arguments('-DPACKAGE_NAME="plocate"', language: 'cpp')
-- 
2.35.5

